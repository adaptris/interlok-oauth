ext {
  componentName = 'Interlok OAUTH/Generic'
  componentDesc = 'Handling OAUTH where the provider does not have an explicit API or SDK'
  delombokTargetDir = new File("${project.projectDir}/src/main/generated")
  jacksonVersion = '2.16.2'
}

dependencies {
  api ("com.adaptris:interlok-apache-http:$interlokCoreVersion") { changing= true}
  api ("com.jayway.jsonpath:json-path:2.9.0")
  // Dependency to platform/BOM
  implementation (platform("com.fasterxml.jackson:jackson-bom:$jacksonVersion"))
  api ("com.fasterxml.jackson.core:jackson-databind")
  testImplementation ("io.undertow:undertow-core:2.3.12.Final")
 }

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task examplesJar(type: Jar, dependsOn: test) {
    classifier = 'examples'
    from new File(buildDir, '/examples')
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives javadocJar
    archives examplesJar
    archives sourcesJar
}
jar {
  manifest {
    attributes("Built-By": System.getProperty('user.name'),
              "Build-Jdk": System.getProperty('java.version'),
              "Implementation-Title": componentName,
              "Implementation-Version": project.version,
              "Implementation-Vendor-Id": project.group,
              "Implementation-Vendor": organizationName)
  }
}
publishing {
  publications {
      mavenJava(MavenPublication) {
          from components.java

          artifact javadocJar { classifier "javadoc" }
          artifact examplesJar { classifier "examples" }
          artifact sourcesJar { classifier "sources" }
          pom.withXml {
            asNode().appendNode("name", componentName)
            asNode().appendNode("description", componentDesc)
            asNode().appendNode("url", "https://interlok.adaptris.net/interlok-docs/#/pages/cookbook/cookbook-http-client?id=oauth")
            def properties = asNode().appendNode("properties")
            properties.appendNode("target", "3.8.1+")
            properties.appendNode("license", "false")
            properties.appendNode("tags", "oauth")
            properties.appendNode("repository", "https://github.com/adaptris/interlok-oauth")
          }
      }
  }
  repositories {
    maven {
      credentials {
        username repoUsername
        password repoPassword
      }
      url mavenPublishUrl
    }
  }
}
delombok {
  target = delombokTargetDir
}

task deleteGeneratedFiles(type: Delete) {
  delete delombokTargetDir
}

clean.dependsOn deleteGeneratedFiles
